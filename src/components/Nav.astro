---
import Icon from "./Icon.astro";
import ThemeToggle from "./ThemeToggle.astro";
import type { iconPaths } from "./IconPaths";
import VisuallyHidden from "./VisuallyHidden.astro";

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
  { label: "Home", href: "/" },
  { label: "Blog", href: "/blog/" },
  { label: "About", href: "/about/" },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: {
  label: string;
  href: string;
  icon: keyof typeof iconPaths;
}[] = [
  {
    label: "Twitter",
    href: "https://x.com/acloseknityarn",
    icon: "twitter-logo",
  },
  {
    label: "Twitch",
    href: "https://www.twitch.tv/captainclaw_",
    icon: "twitch-logo",
  },
  {
    label: "GitHub",
    href: "https://github.com/acloseknityarn",
    icon: "github-logo",
  },
  {
    label: "LinkedIn",
    href: "https://www.linkedin.com/in/aryamann-verma/",
    icon: "linkedin-logo",
  },
  {
    label: "Instagram",
    href: "https://www.instagram.com/acloseknityarn/",
    icon: "instagram-logo",
  },
  {
    label: "YouTube",
    href: "https://www.youtube.com/@aryamannverma",
    icon: "youtube-logo",
  },
];
---

<nav>
  <div class="menu-header">
    <a href="/" class="site-title">
      <Icon
        icon="terminal-window"
        color="var(--accent-regular)"
        size="1.6em"
        gradient
      />
      Aryamann Verma
    </a>

    <div id="menu-content">
      <ul class="nav-items">
        {
          textLinks.map(({ label, href }) => (
            <li>
              <a
                aria-current={Astro.url.pathname === href}
                class:list={[
                  "link",
                  {
                    active:
                      Astro.url.pathname === href ||
                      (href !== "/" && Astro.url.pathname.startsWith(href)),
                  },
                ]}
                href={href}
              >
                {label}
              </a>
            </li>
          ))
        }
      </ul>

      <div class="menu-footer">
        <div class="socials">
          {
            iconLinks.map(({ href, icon, label }) => (
              <a href={href} class="social">
                <VisuallyHidden>{label}</VisuallyHidden>
                <Icon icon={icon} />
              </a>
            ))
          }
        </div>

        <div class="theme-toggle">
          <ThemeToggle />
        </div>
      </div>
    </div>

    <noscript>
      <div id="menu-content" class="noscript-menu-content">
        <ul class="nav-items">
          {
            textLinks.map(({ label, href }) => (
              <li>
                <a
                  aria-current={Astro.url.pathname === href}
                  class:list={[
                    "link",
                    {
                      active:
                        Astro.url.pathname === href ||
                        (href !== "/" && Astro.url.pathname.startsWith(href)),
                    },
                  ]}
                  href={href}
                >
                  {label}
                </a>
              </li>
            ))
          }
        </ul>
  
        <div class="menu-footer">
          <div class="socials">
            {
              iconLinks.map(({ href, icon, label }) => (
                <a href={href} class="social">
                  <VisuallyHidden>{label}</VisuallyHidden>
                  <Icon icon={icon} />
                </a>
              ))
            }
          </div>
  
          <div class="theme-toggle">
            <ThemeToggle />
          </div>
        </div>
      </div>
    </noscript>
    

    <button class="menu-button" aria-expanded="false">
      <VisuallyHidden>Menu</VisuallyHidden>
      <Icon icon="list" />
    </button>
  </div>

</nav>

<style>
  .noscript-menu-content {
    display: block !important;
  }

  @media (min-width: 50em) {
    .noscript-menu-content {
      display: none !important;
    }
  }
  
  nav {
    font-family: var(--font-brand);
    font-weight: 500;
    margin-bottom: 3.5rem;
  }

   @media (min-width: 50em) {
    nav {
      padding: 2.5rem 5rem;
    }
   }

  .menu-header {
    display: flex;
    flex-wrap: wrap;
    padding: 1.5rem;
  }

  @media (min-width: 50em) {
    .menu-header {
      align-items: center;
      justify-content: space-between;
      padding: 0;
    }
  }

  .site-title {
    display: flex;
    flex-shrink: 0;
    gap: 0.5rem;
    align-items: center;
    line-height: 1.1;
    color: var(--gray-0);
    text-decoration: none;
  }

  @media (min-width: 50em) {
    .site-title {
      font-size: var(--text-lg);
    }
  }

  .menu-button {
    margin-left: auto;
    display: flex;
    border-radius: 9999px;
    border: 0;
    font-size: 1.5rem;
    padding: 0.6rem;
    box-shadow: var(--shadow-md);
    background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
    color: var(--gray-300);
  }

  @media (min-width: 50em) {
    .menu-button {
      display: none;
    }
  }

  .menu-button[aria-expanded="true"] {
    color: var(--gray-0);
    background: linear-gradient(180deg, var(--gray-600), transparent),
      radial-gradient(var(--gray-900), var(--gray-800) 150%);
  }

  #menu-content {
    position: absolute;
    top: 0px;
    background: white;
    right: 0;
    top: 90px;
    width: 100%;
    border-radius: 0 0 0.75rem 0.75rem;
    display: none;
  }

  @media (min-width: 50em) {
    #menu-content {
      display: contents;
      position: static;
      background: transparent;
    }
  }

  .nav-items {
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: var(--text-md);
    line-height: 1.2;
    list-style: none;
    padding: 2rem;
    background-color: var(--gray-999);
    border-bottom: 1px solid var(--gray-800);
  }

  @media (min-width: 50em) {
    .nav-items {
      flex-direction: row;
      border-bottom: none;
      height: fit-content;
      font-size: var(--text-sm);
      border-radius: 999rem;
      border: 0;
      padding: 0.5rem 0.5625rem;
      background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
      box-shadow: var(--shadow-md);
    }

    .nav-items a {
      padding: .5rem 1rem;
      border-radius: 999rem;
      transition: color var(--theme-transition), background-color var(--theme-transition);
    }

    .nav-items a[aria-current="true"] {
      background-color: var(--accent-regular);
      color: var(--accent-text-over);
    }
  }

  @media (min-width: 69rem) {
    .nav-items {
      transform: translateX(25%);
    }
  }

  .link {
    display: inline-block;
    color: var(--gray-300);
    text-decoration: none;
  }

  .link:hover,
  .link:focus {
    color: var(--gray-100);
    background-color: var(--accent-subtle-overlay);
  }

  .link.active {
    color: var(--gray-0);
  }

  .menu-footer {
    --icon-size: var(--text-xl);
    --icon-padding: 0.5rem;

    display: flex;
    justify-content: space-between;
    align-items: center
    gap: 0.75rem;
    padding: 1.5rem 2rem 1.5rem 1.5rem;
    background-color: var(--gray-999);
    border-radius: 0 0 0.75rem 0.75rem;
    box-shadow: var(--shadow-lg);
  }

  @media (min-width: 50em) {
    .menu-footer {
      background: transparent;
      padding: 0;
      box-shadow: none;
      gap: 0.7rem;
    }

    .theme-toggle {
      transform: translateY(4px)
    }
  }

  .socials {
    display: flex;
    flex-wrap: wrap;
    gap: 0.625rem;
    font-size: var(--icon-size);
  }

  @media (min-width: 50em) {
    .socials {
      gap: 0;
    }
  }

  .social {
    display: flex;
    padding: var(--icon-padding);
    text-decoration: none;
    color: var(--accent-dark);
    transition: color var(--theme-transition);
  }

  .social:hover,
  .social:focus {
    color: var(--accent-text-over);
  }
</style>

<script>
  function mobileMenuToggle() {
    const flyoutButtonTrigger = document.querySelector(".menu-button");
    const menu = document.getElementById("menu-content");

    if (!menu) {
      return;
    }

    flyoutButtonTrigger?.addEventListener(
      "click",
      handleMenuButtonTriggerClick,
    );

    function handleMenuButtonTriggerClick() {
      if (!menu) {
        return;
      }

      const currentAriaExpanded =
        flyoutButtonTrigger?.getAttribute("aria-expanded");

      if (currentAriaExpanded === "true") {
        flyoutButtonTrigger?.setAttribute("aria-expanded", "false");

        menu.style.display = "none";
      } else {
        flyoutButtonTrigger?.setAttribute("aria-expanded", "true");
        menu.style.display = "block";
      }
    }
  }

  mobileMenuToggle();
</script>